apiVersion: apps/v1
kind: Deployment
metadata:
  name: mintegration-deployment
  namespace: mintegration
spec:
  # anpassen auf mehrere instanzen wenn gew√ºnscht
  replicas: 1
  selector: 
    matchLabels:
      app: mintegration-selector
  template:
    metadata:
      labels:
        app: mintegration-selector
    spec:
      containers:
      - name: mintegration
        image: maxisses/mintegration
        imagePullPolicy: Always
        ports:
            - containerPort: 3000
        ## pod neustarten sobald livenessprobe failed
        # livenessProbe:
        #   httpGet:
        #     path: /health
        #     port: 3000
        #   initialDelaySeconds: 60
        #   periodSeconds: 60
        ## pod in Ruhe lassen bis readinessprobe wieder erfolgreich ist
        # readinessProbe:
        # exec:
        #     command:
        #       - npm run test
        # initialDelaySeconds: 45
        # periodSeconds: 10
        # resources:
        #     limits:
        #       memory: 256Mi
        #       cpu: 1000m
        #     requests:
        #       memory: 128Mi
        #       cpu: 250m
---
apiVersion: v1
kind: Service
metadata:
  name: mintegration-service
  namespace: mintegration
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 3000
  selector:
    app: mintegration-selector
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mintegration-ingress
  namespace: mintegration
  annotations:
   ingress.bluemix.net/redirect-to-https: "True"
spec:
  tls:
  - hosts:
    -  mintegrationhalle.de
    secretName: mintegrationtlssecret
  rules:
  - host: mintegrationhalle.de
    http:
      paths:
      - path: /
        backend:
          serviceName: mintegration-service
          servicePort: 80